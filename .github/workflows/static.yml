name: Deploy React app to Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Detect package manager
        id: pm
        run: |
          if [ -f frontend/pnpm-lock.yaml ]; then
            echo "pm=pnpm" >> $GITHUB_OUTPUT
          elif [ -f frontend/yarn.lock ]; then
            echo "pm=yarn" >> $GITHUB_OUTPUT
          else
            echo "pm=npm" >> $GITHUB_OUTPUT
          fi

      - name: Install package manager (pnpm only)
        if: steps.pm.outputs.pm == 'pnpm'
        run: npm i -g pnpm

      - name: Enable corepack for yarn
        if: steps.pm.outputs.pm == 'yarn'
        run: corepack enable

      - name: Install dependencies
        working-directory: frontend
        run: |
          if [ "${{ steps.pm.outputs.pm }}" = "pnpm" ]; then pnpm i --frozen-lockfile || pnpm i; fi
          if [ "${{ steps.pm.outputs.pm }}" = "yarn" ]; then yarn install --frozen-lockfile || yarn install; fi
          if [ "${{ steps.pm.outputs.pm }}" = "npm" ]; then npm ci || npm install --legacy-peer-deps; fi

      - name: Build
        working-directory: frontend
        run: |
          if jq -e '.scripts.build' package.json >/dev/null 2>&1; then
            if [ "${{ steps.pm.outputs.pm }}" = "pnpm" ]; then pnpm run build; fi
            if [ "${{ steps.pm.outputs.pm }}" = "yarn" ]; then yarn build; fi
            if [ "${{ steps.pm.outputs.pm }}" = "npm" ]; then npm run build; fi
          else
            echo "No build script found in frontend/package.json"; exit 1
          fi

      - name: Detect artifact path
        id: detect
        run: |
          if [ -d frontend/dist ]; then
            echo "path=frontend/dist" >> $GITHUB_OUTPUT
          elif [ -d frontend/build ]; then
            echo "path=frontend/build" >> $GITHUB_OUTPUT
          else
            echo "No build output found (dist/build missing)"; ls -la frontend; exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.detect.outputs.path }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
